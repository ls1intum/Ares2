sun.reflect.misc
java.lang.reflect
java.lang.invoke
jdk.internal.reflect.ReflectionFactory.newConstructorAccessor(java.lang.reflect.Constructor)
java.lang.reflect.Method.invoke(java.lang.Object, [Ljava.lang.Object;)
jdk.internal.reflect.ReflectionFactory.newFieldAccessor(java.lang.reflect.Field, boolean)
java.lang.reflect.Field.getBoolean(java.lang.Object)
java.lang.reflect.Field.setShort(java.lang.Object, short)
java.lang.reflect.Field.get(java.lang.Object)
java.lang.reflect.Field.getChar(java.lang.Object)
java.lang.reflect.Field.setBoolean(java.lang.Object, boolean)
java.lang.reflect.Field.setInt(java.lang.Object, int)
java.lang.reflect.Field.getLong(java.lang.Object)
java.lang.reflect.Field.set(java.lang.Object, java.lang.Object)
java.lang.reflect.Field.setByte(java.lang.Object, byte)
java.lang.reflect.Field.getFloat(java.lang.Object)
java.lang.reflect.Field.getInt(java.lang.Object)
java.lang.reflect.Field.getShort(java.lang.Object)
java.lang.reflect.Field.setFloat(java.lang.Object, float)
java.lang.reflect.Field.getByte(java.lang.Object)
java.lang.reflect.Field.setChar(java.lang.Object, char)
java.lang.reflect.Field.setLong(java.lang.Object, long)
java.lang.reflect.Field.setDouble(java.lang.Object, double)
java.lang.reflect.Field.getDouble(java.lang.Object)
jdk.internal.reflect.ReflectionFactory.newMethodAccessor(java.lang.reflect.Method, boolean)
jdk.internal.reflect.Reflection.filterFields(java.lang.Class, [Ljava.lang.reflect.Field;)
jdk.internal.reflect.Reflection.registerFieldsToFilter(java.lang.Class, java.util.Set)
jdk.internal.reflect.Reflection.filterMethods(java.lang.Class, [Ljava.lang.reflect.Method;)
jdk.internal.reflect.Reflection.registerMethodsToFilter(java.lang.Class, java.util.Set)
jdk.internal.reflect.Reflection.verifyMemberAccess(java.lang.Class, java.lang.Class, java.lang.Class, int)
jdk.internal.reflect.Reflection.ensureMemberAccess(java.lang.Class, java.lang.Class, java.lang.Class, int)
jdk.internal.reflect.Reflection.newIllegalAccessException(java.lang.Class, java.lang.Class, java.lang.Class, int)
sun.invoke.util.VerifyAccess.isMemberAccessible(java.lang.Class, java.lang.Class, int, java.lang.Class, java.lang.Class, int)
jdk.internal.reflect.Reflection.verifyPublicMemberAccess(java.lang.Class, int)
java.lang.ModuleLayer$Controller.enableNativeAccess(java.lang.Module)
java.lang.foreign.SymbolLookup.libraryLookup(java.nio.file.Path, java.lang.foreign.Arena)
java.lang.foreign.SymbolLookup.libraryLookup(java.lang.String, java.lang.foreign.Arena)
jdk.internal.foreign.AbstractMemorySegmentImpl.reinterpretInternal(java.lang.Class, long, java.lang.foreign.MemorySegment$Scope, java.util.function.Consumer)
jdk.internal.foreign.abi.AbstractLinker.downcallHandle(java.lang.foreign.MemorySegment, java.lang.foreign.FunctionDescriptor, [Ljava.lang.foreign.Linker$Option;)
jdk.internal.foreign.abi.AbstractLinker.upcallStub(java.lang.invoke.MethodHandle, java.lang.foreign.FunctionDescriptor, java.lang.foreign.Arena, [Ljava.lang.foreign.Linker$Option;)
jdk.internal.foreign.abi.AbstractLinker.downcallHandle(java.lang.foreign.FunctionDescriptor, [Ljava.lang.foreign.Linker$Option;)
jdk.internal.foreign.layout.ValueLayouts$OfAddressImpl.withTargetLayout(java.lang.foreign.MemoryLayout)
java.io.ObjectStreamClass.forClass()
java.io.ObjectStreamField.getType()
java.lang.Class.getNestMembers()
java.lang.Class.newInstance()
java.lang.Class.getDeclaredFields()
java.lang.Class.getField(java.lang.String)
java.lang.Class.getConstructors()
java.lang.Class.getResourceAsStream(java.lang.String)
java.lang.Class.getDeclaredConstructors()
java.lang.Class.getMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.Class.getDeclaredClasses()
java.lang.Class.getClassLoader()
java.lang.Class.getDeclaredMethods()
java.lang.Class.forName(java.lang.String)
java.lang.Class.getMethods()
java.lang.Class.getNestHost()
java.lang.Class.getEnclosingMethod()
java.lang.Class.forName(java.lang.Module, java.lang.String)
java.lang.Class.forName(java.lang.String, boolean, java.lang.ClassLoader)
java.lang.Class.getEnclosingClass()
java.lang.Class.getFields()
java.lang.Class.getDeclaredMethod(java.lang.String, [Ljava.lang.Class;)
java.lang.Class.getDeclaredConstructor([Ljava.lang.Class;)
java.lang.Class.getEnclosingConstructor()
java.lang.Class.getConstructor([Ljava.lang.Class;)
java.lang.Class.getResource(java.lang.String)
java.lang.Class.getRecordComponents()
java.lang.Class.getPermittedSubclasses()
java.lang.Class.getDeclaredField(java.lang.String)
java.lang.Class.getClasses()
java.lang.Class.getDeclaringClass()
java.lang.ClassLoader.getParent()
java.lang.ClassLoader.getSystemClassLoader()
java.lang.ClassLoader.getPlatformClassLoader()
java.lang.Module.addReads(java.lang.Module)
java.lang.Module.getResourceAsStream(java.lang.String)
java.lang.Module.addExports(java.lang.String, java.lang.Module)
java.lang.Module.addOpens(java.lang.String, java.lang.Module)
java.lang.Module.addUses(java.lang.Class)
java.lang.Package.getPackages()
java.lang.Package.getPackage(java.lang.String)
java.lang.Runtime.loadLibrary(java.lang.String)
java.lang.Runtime.load(java.lang.String)
java.lang.System.getLogger(java.lang.String)
java.lang.System.getLogger(java.lang.String, java.util.ResourceBundle)
java.lang.System.setSecurityManager(java.lang.SecurityManager)
java.lang.System.loadLibrary(java.lang.String)
java.lang.System.load(java.lang.String)
java.lang.Thread.getContextClassLoader()
java.lang.foreign.SymbolLookup.loaderLookup()
java.lang.invoke.MethodHandleProxies.asInterfaceInstance(java.lang.Class, java.lang.invoke.MethodHandle)
java.lang.invoke.MethodHandles.lookup()
java.lang.reflect.AccessibleObject.canAccess(java.lang.Object)
java.lang.reflect.AccessibleObject.trySetAccessible()
java.lang.reflect.AccessibleObject.setAccessible([Ljava.lang.reflect.AccessibleObject;, boolean)
java.lang.reflect.Constructor.newInstance([Ljava.lang.Object;)
java.lang.reflect.Constructor.setAccessible(boolean)
java.lang.reflect.Field.setAccessible(boolean)
java.lang.reflect.InvocationHandler.invokeDefault(java.lang.Object, java.lang.reflect.Method, [Ljava.lang.Object;)
java.lang.reflect.Method.setAccessible(boolean)
java.lang.reflect.Proxy.getProxyClass(java.lang.ClassLoader, [Ljava.lang.Class;)
java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader, [Ljava.lang.Class;, java.lang.reflect.InvocationHandler)
java.lang.reflect.Proxy.getInvocationHandler(java.lang.Object)
java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext)
java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext)
java.security.AccessController.doPrivileged(java.security.PrivilegedAction)
java.security.AccessController.doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction, java.security.AccessControlContext, [Ljava.security.Permission;)
java.security.AccessController.doPrivilegedWithCombiner(java.security.PrivilegedAction, java.security.AccessControlContext, [Ljava.security.Permission;)
java.security.AccessController.doPrivilegedWithCombiner(java.security.PrivilegedAction)
java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext, [Ljava.security.Permission;)
java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction)
java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext, [Ljava.security.Permission;)
java.security.AccessController.doPrivilegedWithCombiner(java.security.PrivilegedExceptionAction)
java.sql.DriverManager.deregisterDriver(java.sql.Driver)
java.sql.DriverManager.getConnection(java.lang.String, java.lang.String, java.lang.String)
java.sql.DriverManager.drivers()
java.sql.DriverManager.getDriver(java.lang.String)
java.sql.DriverManager.getConnection(java.lang.String, java.util.Properties)
java.sql.DriverManager.getConnection(java.lang.String)
java.sql.DriverManager.getDrivers()
java.util.ResourceBundle.getBundle(java.lang.String)
java.util.ResourceBundle.getBundle(java.lang.String, java.lang.Module)
java.util.ResourceBundle.getBundle(java.lang.String, java.util.Locale)
java.util.ResourceBundle.getBundle(java.lang.String, java.util.Locale, java.util.ResourceBundle$Control)
java.util.ResourceBundle.getBundle(java.lang.String, java.util.ResourceBundle$Control)
java.util.ResourceBundle.getBundle(java.lang.String, java.util.Locale, java.lang.Module)
java.util.ResourceBundle.getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)
java.util.ResourceBundle.clearCache()
java.util.ResourceBundle.getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader, java.util.ResourceBundle$Control)
java.util.ServiceLoader.load(java.lang.ModuleLayer, java.lang.Class)
java.util.ServiceLoader.load(java.lang.Class, java.lang.ClassLoader)
java.util.ServiceLoader.load(java.lang.Class)
java.util.ServiceLoader.loadInstalled(java.lang.Class)
java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(java.lang.Class, java.lang.String)
java.util.concurrent.atomic.AtomicLongFieldUpdater.newUpdater(java.lang.Class, java.lang.String)
java.util.concurrent.atomic.AtomicReferenceFieldUpdater.newUpdater(java.lang.Class, java.lang.Class, java.lang.String)
java.util.logging.Logger.getAnonymousLogger(java.lang.String)
java.util.logging.Logger.getLogger(java.lang.String)
java.util.logging.Logger.getLogger(java.lang.String, java.lang.String)
javax.sql.rowset.serial.SerialJavaObject.getFields()
jdk.internal.foreign.AbstractMemorySegmentImpl.reinterpret(long, java.lang.foreign.Arena, java.util.function.Consumer)
jdk.internal.foreign.AbstractMemorySegmentImpl.reinterpret(long)
jdk.internal.foreign.AbstractMemorySegmentImpl.reinterpret(java.lang.foreign.Arena, java.util.function.Consumer)
sun.misc.Unsafe.getUnsafe()
sun.reflect.misc.ReflectUtil.ensureMemberAccess(java.lang.Class, java.lang.Class, java.lang.Object, int)
jdk.internal.reflect.ConstantPool$Tag.values()
jdk.internal.reflect.ConstantPool.getTagAt(int)
jdk.internal.reflect.ReflectionFactory$GetReflectionFactoryAction.run()
jdk.internal.reflect.ConstantPool.getMethodAt(int)
jdk.internal.reflect.ConstantPool.getMemberRefInfoAt(int)
jdk.internal.reflect.ConstantPool.getFieldAt(int)
jdk.internal.reflect.ConstantPool.getMethodAtIfLoaded(int)
jdk.internal.reflect.ConstantPool.getStringAt(int)
jdk.internal.reflect.ConstantPool.getFieldAtIfLoaded(int)
jdk.internal.reflect.ConstantPool.getClassRefIndexAt(int)
jdk.internal.reflect.ConstantPool.getLongAt(int)
jdk.internal.reflect.ConstantPool.getNameAndTypeRefIndexAt(int)
jdk.internal.reflect.ConstantPool.getFloatAt(int)
jdk.internal.reflect.ConstantPool.getUTF8At(int)
jdk.internal.reflect.ConstantPool.getSize()
jdk.internal.reflect.ConstantPool.getClassAt(int)
jdk.internal.reflect.ConstantPool.getIntAt(int)
jdk.internal.reflect.ConstantPool.getDoubleAt(int)
jdk.internal.reflect.ConstantPool.getNameAndTypeRefInfoAt(int)
jdk.internal.reflect.ConstantPool.getClassAtIfLoaded(int)
jdk.internal.reflect.ReflectionFactory.copyConstructor(java.lang.reflect.Constructor)
jdk.internal.reflect.ReflectionFactory.newConstructor(java.lang.Class, [Ljava.lang.Class;, [Ljava.lang.Class;, int, int, java.lang.String, [B, [B)
jdk.internal.reflect.ReflectionFactory.copyField(java.lang.reflect.Field)
jdk.internal.reflect.ReflectionFactory.getExecutableTypeAnnotationBytes(java.lang.reflect.Executable)
jdk.internal.reflect.ReflectionFactory.copyMethod(java.lang.reflect.Method)
jdk.internal.reflect.ReflectionFactory.getConstructorAccessor(java.lang.reflect.Constructor)
jdk.internal.reflect.ReflectionFactory.leafCopyMethod(java.lang.reflect.Method)
jdk.internal.reflect.ReflectionFactory.newInstance(java.lang.reflect.Constructor, [Ljava.lang.Object;, java.lang.Class)
jdk.internal.reflect.ReflectionFactory.setConstructorAccessor(java.lang.reflect.Constructor, jdk.internal.reflect.ConstructorAccessor)
jdk.internal.reflect.ReflectionFactory.getExecutableSharedParameterTypes(java.lang.reflect.Executable)
jdk.internal.reflect.ReflectionFactory.hasStaticInitializerForSerialization(java.lang.Class)
jdk.internal.reflect.ReflectionFactory.getReflectionFactory()
sun.reflect.ReflectionFactory.readResolveForSerialization(java.lang.Class)
jdk.internal.reflect.ReflectionFactory.newConstructorForSerialization(java.lang.Class)
jdk.internal.reflect.ReflectionFactory.newConstructorForSerialization(java.lang.Class, java.lang.reflect.Constructor)
sun.reflect.ReflectionFactory.readObjectForSerialization(java.lang.Class)
jdk.internal.reflect.ReflectionFactory.readResolveForSerialization(java.lang.Class)
jdk.internal.reflect.ReflectionFactory.writeReplaceForSerialization(java.lang.Class)
sun.reflect.ReflectionFactory.readObjectNoDataForSerialization(java.lang.Class)
sun.reflect.ReflectionFactory.writeReplaceForSerialization(java.lang.Class)
sun.reflect.ReflectionFactory.newConstructorForSerialization(java.lang.Class, java.lang.reflect.Constructor)
sun.reflect.ReflectionFactory.newConstructorForExternalization(java.lang.Class)
jdk.internal.reflect.ReflectionFactory.readObjectForSerialization(java.lang.Class)
jdk.internal.reflect.ReflectionFactory.readObjectNoDataForSerialization(java.lang.Class)
jdk.internal.reflect.ReflectionFactory.writeObjectForSerialization(java.lang.Class)
sun.reflect.ReflectionFactory.newOptionalDataExceptionForSerialization(boolean)
sun.reflect.ReflectionFactory.writeObjectForSerialization(java.lang.Class)
sun.reflect.ReflectionFactory.newConstructorForSerialization(java.lang.Class)
sun.reflect.ReflectionFactory.hasStaticInitializerForSerialization(java.lang.Class)