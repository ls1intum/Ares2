    /**
     * The packages that should not be accessed by the student submission.
     */
    private static final List<String> BANNED_FILESYSTEM_ACCESS_PACKAGES = List.of(
            "java.nio.file",
            "java.util.prefs",
            "sun.print",
            "sun.security",
            "java.util.jar",
            "java.util.zip",
            "sun.awt.X11",
            "javax.imageio",
            "javax.sound.midi",
            "javax.swing.filechooser",
            "java.awt.desktop");

    /**
     * This method checks if any class in the given package accesses the file system.
     */
    @ArchTest
    public static final ArchRule NO_CLASS_SHOULD_ACCESS_FILE_SYSTEM = ArchRuleDefinition.noClasses()
            .should(new TransitivelyAccessesMethodsCondition(new DescribedPredicate<>("accesses file system") {
                @Override
                public boolean test(JavaAccess<?> javaAccess) {
                    if (BANNED_FILESYSTEM_ACCESS_PACKAGES.stream().anyMatch(p -> javaAccess.getTarget().getFullName().startsWith(p))) {
                        return true;
                    }
                    Optional<Set<String>> bannedMethods = Optional.ofNullable(getForbiddenMethods(FILESYSTEM_INTERACTION.name()));
                    return bannedMethods.map(strings -> strings.contains(javaAccess.getTarget().getName())).orElse(false);
                }
            }, FILESYSTEM_INTERACTION));