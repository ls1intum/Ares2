java.lang.Thread.isInterrupted()
java.lang.Thread.interrupt()
java.lang.Thread.setName(java.lang.String)
java.lang.Thread.getName()
java.lang.Thread.setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)
java.lang.Thread.getDefaultUncaughtExceptionHandler()
java.lang.Thread.getStackTrace()
java.lang.Thread.getUncaughtExceptionHandler()
java.lang.Thread.threadId()
java.lang.Thread.getContextClassLoader()
java.lang.Thread.setContextClassLoader(java.lang.ClassLoader)
java.lang.Thread.start()
java.lang.Thread.isDaemon()
java.lang.Thread.getThreadGroup()
java.lang.Thread.getPriority()
java.lang.Thread.run()
java.lang.Thread.sleep(java.time.Duration)
java.lang.Thread.sleep(long)
java.lang.Thread.sleep(long, int)
java.lang.Thread.yield()
com.sun.java.accessibility.internal.AccessBridge.<init>()
com.sun.jmx.remote.internal.ClientCommunicatorAdmin.<init>(long)
com.sun.jmx.remote.internal.ServerCommunicatorAdmin.<init>(long)
com.sun.media.sound.SoftAudioPusher.start()
com.sun.org.apache.xml.internal.utils.ThreadControllerWrapper$ThreadController.run(java.lang.Runnable, int)
java.awt.image.renderable.RenderableImageProducer.startProduction(java.awt.image.ImageConsumer)
java.lang.Thread.startVirtualThread(java.lang.Runnable)
javax.swing.JTable.print(javax.swing.JTable$PrintMode, java.text.MessageFormat, java.text.MessageFormat, boolean, javax.print.attribute.PrintRequestAttributeSet, boolean, javax.print.PrintService)
javax.swing.text.JTextComponent.print(java.text.MessageFormat, java.text.MessageFormat, boolean, javax.print.PrintService, javax.print.attribute.PrintRequestAttributeSet, boolean)
javax.swing.text.LayoutQueue.addTask(java.lang.Runnable)
jdk.internal.jshell.tool.StopDetectingInputStream.setInputStream(java.io.InputStream)
jdk.internal.org.jline.terminal.impl.AbstractWindowsTerminal.resume()
jdk.internal.org.jline.terminal.impl.ExternalTerminal.resume()
jdk.internal.org.jline.terminal.impl.PosixPtyTerminal.resume()
jdk.internal.ref.CleanerImpl.start(java.lang.ref.Cleaner, java.util.concurrent.ThreadFactory)
jdk.jfr.internal.consumer.AbstractEventStream.startAsync(long)
jdk.jpackage.internal.IOUtils.getProcessOutput(java.util.List, [Ljava.lang.String;)
org.graalvm.compiler.hotspot.debug.BenchmarkCounters.initialize(jdk.vm.ci.hotspot.HotSpotJVMCIRuntime, org.graalvm.compiler.options.OptionValues)
sun.awt.im.InputMethodManager.getInstance()
sun.awt.windows.WToolkit.<init>()
sun.jvm.hotspot.utilities.StreamMonitor.<init>(java.io.InputStream, java.lang.String, boolean)
sun.jvm.hotspot.utilities.WorkerThread.<init>()
sun.management.jdp.JdpController.startDiscoveryService(java.net.InetAddress, int, java.lang.String, java.lang.String)
sun.print.PrintServiceLookupProvider.<init>()
java.util.Timer.<init>(java.lang.String, boolean)
sun.tools.jconsole.CreateMBeanDialog.actionPerformed(java.awt.event.ActionEvent)
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal.<init>(sun.jvm.hotspot.debugger.MachineDescription, boolean)
sun.tools.jconsole.Tab.workerAdd(java.lang.Runnable)
sun.tools.jconsole.VMPanel.connect()
jdk.jshell.execution.Util.forwardExecutionControlAndIO(jdk.jshell.spi.ExecutionControl, java.io.InputStream, java.io.OutputStream, java.util.Map, java.util.Map)
jdk.jshell.execution.Util.remoteInputOutput(java.io.InputStream, java.io.OutputStream, java.util.Map, java.util.Map, java.util.function.BiFunction)
sun.jvm.hotspot.debugger.linux.LinuxDebuggerLocal.<init>(sun.jvm.hotspot.debugger.MachineDescription, boolean)
org.graalvm.collections.LockFreePrefixTree$ObjectPoolingAllocator.<init>(int)
com.sun.java.accessibility.util.EventQueueMonitor.<init>()
java.util.concurrent.TimeUnit.timedJoin(java.lang.Thread, long)
com.sun.org.apache.xerces.internal.parsers.DOMParserImpl.parseURI(java.lang.String)
com.sun.org.apache.xerces.internal.parsers.DOMParserImpl.parse(org.w3c.dom.ls.LSInput)
java.awt.Robot.delay(int)
sun.awt.image.InputStreamImageSource.doFetch()
sun.net.www.http.HttpClient.parseHTTP(sun.net.www.MessageHeader, sun.net.www.protocol.http.HttpURLConnection)
sun.nio.ch.DatagramSocketAdaptor.receive(java.net.DatagramPacket)
java.lang.Thread.getState()
java.lang.Thread.join(java.time.Duration)
com.sun.media.sound.RIFFReader.readFully([B, int, int)
com.sun.media.sound.RIFFReader.skip(long)
com.sun.media.sound.SoftMixingClip.open(javax.sound.sampled.AudioInputStream)
com.sun.tools.example.debug.tty.TTY.exceptionEvent(com.sun.jdi.event.ExceptionEvent)
com.sun.tools.example.debug.tty.TTY.methodExitEvent(com.sun.jdi.event.MethodExitEvent)
com.sun.tools.example.debug.tty.TTY.methodEntryEvent(com.sun.jdi.event.MethodEntryEvent)
com.sun.tools.example.debug.tty.TTY.breakpointEvent(com.sun.jdi.event.BreakpointEvent)
com.sun.tools.example.debug.tty.TTY.fieldWatchEvent(com.sun.jdi.event.WatchpointEvent)
com.sun.tools.example.debug.tty.TTY.stepEvent(com.sun.jdi.event.StepEvent)
com.sun.tools.example.debug.tty.TTY.vmInterrupted()
com.sun.tools.example.debug.tty.TTY.vmStartEvent(com.sun.jdi.event.VMStartEvent)
java.util.concurrent.FutureTask.state()
jdk.internal.vm.ThreadContainers.container(java.lang.Thread)
java.lang.Thread.setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)
java.lang.Thread.setPriority(int)
java.lang.Thread.setDaemon(boolean)
java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject.awaitUninterruptibly()
java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject.await()
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitUninterruptibly()
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await()
java.awt.EventQueue.<init>()
java.lang.Thread.activeCount()
java.lang.Thread.enumerate([Ljava.lang.Thread;)
java.lang.Thread.toString()
java.lang.ThreadGroup.list()
java.lang.ThreadGroup.interrupt()
java.lang.ThreadGroup.activeCount()
java.lang.ThreadGroup.enumerate([Ljava.lang.Thread;, boolean)
java.lang.ThreadGroup.<init>(java.lang.String)
sun.awt.AppContext.dispose()
sun.awt.SunToolkit.createNewAppContext()
sun.awt.util.ThreadGroupUtils.getRootThreadGroup()
sun.java2d.marlin.MarlinUtils.getRootThreadGroup()
org.graalvm.compiler.nodes.OptimizationLogImpl.emit(java.util.function.Function)
org.graalvm.compiler.serviceprovider.GraalServices.getThreadId(java.lang.Thread)
com.sun.tools.example.debug.tty.TTY.<init>()
sun.awt.windows.WToolkit.run()
org.graalvm.compiler.core.CompilerThread.<init>(java.lang.Runnable, java.lang.String)
sun.tools.jconsole.Worker.<init>(java.lang.String)
com.sun.media.sound.SoftMixingSourceDataLine.drain()
com.sun.media.sound.SoftMixingSourceDataLine.write([B, int, int)
java.lang.Process.waitFor(long, java.util.concurrent.TimeUnit)
java.rmi.server.UID.<init>()
javax.swing.AbstractButton.doClick(int)
jdk.internal.net.http.common.SSLFlowDelegate$Monitor.run()
jdk.jfr.internal.Utils.takeNap(long)
jdk.jfr.snippets.Snippets.main([Ljava.lang.String;)
org.graalvm.compiler.core.CompilationWatchDog.run()
sun.net.www.http.KeepAliveCache.run()
sun.rmi.registry.RegistryImpl.main([Ljava.lang.String;)
sun.tools.jstat.JStatLogger.logSamples(sun.tools.jstat.OutputFormatter, int, int, int, java.io.PrintStream)
java.util.concurrent.TimeUnit.sleep(long)
com.sun.beans.finder.ClassFinder.findClass(java.lang.String)
com.sun.jmx.remote.internal.ClientNotifForwarder.postReconnection([Lcom.sun.jmx.remote.internal.ClientListenerInfo;)
com.sun.jmx.remote.util.EnvHelp.resolveClientClassLoader(java.util.Map)
com.sun.jmx.remote.util.EnvHelp.resolveServerClassLoader(java.util.Map, javax.management.MBeanServer)
com.sun.management.ThreadMXBean.getCurrentThreadAllocatedBytes()
com.sun.media.sound.SoftMixingMixer.open(javax.sound.sampled.SourceDataLine)
com.sun.media.sound.SoftMixingMixerProvider.getMixer(javax.sound.sampled.Mixer$Info)
com.sun.org.apache.xerces.internal.parsers.DOMParserImpl.abort()
com.sun.org.apache.xml.internal.security.Init.getResource(java.lang.String, java.lang.Class)
com.sun.org.apache.xml.internal.utils.SafeThread.run()
java.awt.Container.print(java.awt.Graphics)
java.awt.Container.paint(java.awt.Graphics)
java.awt.Window.applyResourceBundle(java.lang.String)
java.io.PipedInputStream.read()
java.io.PipedReader.read()
java.io.PrintStream.format(java.lang.String, [Ljava.lang.Object;)
java.io.PrintStream.format(java.util.Locale, java.lang.String, [Ljava.lang.Object;)
java.lang.Object.wait(long)
java.lang.ProcessBuilder.startPipeline(java.util.List)
java.lang.Thread.interrupted()
java.lang.ThreadLocal.set(java.lang.Object)
java.lang.ThreadLocal.remove()
java.lang.ThreadLocal.get()
java.lang.foreign.Arena.ofConfined()
java.lang.invoke.MethodHandleProxies.asInterfaceInstance(java.lang.Class, java.lang.invoke.MethodHandle)
java.net.http.HttpClient.close()
java.rmi.server.LogStream.write(int)
java.util.ServiceLoader.load(java.lang.Class)
java.util.concurrent.CountedCompleter.helpComplete(int)
java.util.concurrent.DelayQueue.poll(long, java.util.concurrent.TimeUnit)
java.util.concurrent.DelayQueue.take()
java.util.concurrent.ExecutorService.close()
java.util.concurrent.ForkJoinPool.managedBlock(java.util.concurrent.ForkJoinPool$ManagedBlocker)
java.util.concurrent.ForkJoinPool.close()
java.util.concurrent.ForkJoinPool
java.util.concurrent.ForkJoinTask.inForkJoinPool()
java.util.concurrent.ForkJoinTask.fork()
java.util.concurrent.ForkJoinTask.getPool()
java.util.concurrent.ForkJoinTask.tryUnfork()
java.util.concurrent.ForkJoinTask.getQueuedTaskCount()
java.util.concurrent.Future.state()
java.util.concurrent.Future.resultNow()
java.util.concurrent.Future.exceptionNow()
java.util.concurrent.FutureTask.run()
java.util.concurrent.StructuredTaskScope.fork(java.util.concurrent.Callable)
java.util.concurrent.SubmissionPublisher.subscribe(java.util.concurrent.Flow$Subscriber)
java.util.concurrent.ThreadLocalRandom.current()
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasQueuedPredecessors()
java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject.awaitUntil(java.util.Date)
java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit)
java.util.concurrent.locks.AbstractQueuedLongSynchronizer$ConditionObject.awaitNanos(long)
java.util.concurrent.locks.AbstractQueuedSynchronizer.hasQueuedPredecessors()
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(long)
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(long, java.util.concurrent.TimeUnit)
java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitUntil(java.util.Date)
java.util.concurrent.locks.LockSupport.parkUntil(java.lang.Object, long)
java.util.concurrent.locks.LockSupport.park()
java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long)
java.util.concurrent.locks.LockSupport.parkNanos(long)
java.util.concurrent.locks.LockSupport.setCurrentBlocker(java.lang.Object)
java.util.concurrent.locks.LockSupport.parkUntil(long)
java.util.concurrent.locks.LockSupport.park(java.lang.Object)
java.util.logging.LogManager.readConfiguration()
java.util.logging.LogRecord.<init>(java.util.logging.Level, java.lang.String)
javax.imageio.spi.IIORegistry.registerApplicationClasspathSpis()
javax.naming.spi.NamingManager.getInitialContext(java.util.Hashtable)
javax.print.SimpleDoc.<init>(java.lang.Object, javax.print.DocFlavor, javax.print.attribute.DocAttributeSet)
javax.script.ScriptEngineManager.<init>()
javax.sql.rowset.spi.SyncFactory.getInstance(java.lang.String)
javax.swing.JEditorPane.registerEditorKitForContentType(java.lang.String, java.lang.String)
javax.swing.text.AbstractDocument.readLock()
javax.swing.text.AbstractDocument.readUnlock()
jdk.internal.foreign.MemorySessionImpl.checkValidStateRaw()
jdk.internal.loader.Resource.getBytes()
jdk.internal.misc.InnocuousThread.run()
jdk.internal.misc.ThreadFlock.close()
jdk.internal.misc.ThreadFlock.wakeup()
jdk.internal.misc.ThreadTracker.begin()
jdk.internal.misc.ThreadTracker.tryBegin()
jdk.internal.misc.ThreadTracker.end(java.lang.Object)
jdk.internal.org.jline.reader.impl.LineReaderImpl.readLine(java.lang.String, java.lang.String, jdk.internal.org.jline.reader.MaskingCallback, java.lang.String)
jdk.internal.org.jline.terminal.spi.TerminalProvider.load(java.lang.String)
jdk.internal.ref.CleanerImpl.run()
jdk.internal.vm.ScopedValueContainer.latest(java.lang.Class)
jdk.internal.vm.StackableScope.push()
jdk.internal.vm.StackableScope.popForcefully()
jdk.internal.vm.StackableScope.tryPop()
jdk.internal.vm.StackableScope.popAll()
jdk.jfr.internal.management.StreamBarrier.check()
jdk.vm.ci.hotspot.HotSpotJVMCIRuntime.attachCurrentThread(boolean, [J)
jdk.vm.ci.hotspot.HotSpotStackFrameReference.materializeVirtualObjects(boolean)
jdk.vm.ci.hotspot.HotSpotStackIntrospection.canMaterializeVirtualObjects()
jdk.xml.internal.SecuritySupport.getClassLoader()
jdk.xml.internal.SecuritySupport.getContextClassLoader()
org.graalvm.compiler.core.CompilationWatchDog.watch(org.graalvm.compiler.core.common.CompilationIdentifier, org.graalvm.compiler.options.OptionValues, boolean, org.graalvm.compiler.core.CompilationWatchDog$EventHandler)
org.graalvm.compiler.debug.TTY$Filter.remove()
org.graalvm.compiler.debug.TTY$Filter.<init>(org.graalvm.compiler.debug.LogStream)
org.graalvm.compiler.debug.TTY$Filter.<init>()
org.graalvm.compiler.serviceprovider.GraalServices.getCurrentThreadId()
org.graalvm.nativeimage.hosted.RuntimeClassInitialization.initializeAtRunTime([Ljava.lang.Class;)
org.graalvm.nativeimage.hosted.RuntimeClassInitialization.initializeAtBuildTime([Ljava.lang.String;)
org.graalvm.nativeimage.hosted.RuntimeClassInitialization.initializeAtBuildTime([Ljava.lang.Class;)
org.graalvm.nativeimage.hosted.RuntimeClassInitialization.initializeAtRunTime([Ljava.lang.String;)
sun.awt.AWTAutoShutdown.run()
sun.awt.Mutex.lock()
sun.awt.Mutex.unlock()
sun.awt.dnd.SunDropTargetContextPeer.getTransferData(java.awt.datatransfer.DataFlavor)
sun.awt.image.ImageDecoder.<init>(sun.awt.image.InputStreamImageSource, java.io.InputStream)
sun.awt.image.ImageRepresentation.reconstruct(int)
sun.awt.shell.ShellFolder.invoke(java.util.concurrent.Callable, java.lang.Class)
sun.java2d.d3d.D3DRenderQueue.isRenderQueueThread()
sun.java2d.opengl.OGLRenderQueue.isQueueFlusherThread()
sun.jvm.hotspot.utilities.ProcImageClassLoader.<init>()
sun.management.ThreadImpl.getCurrentThreadUserTime()
sun.management.ThreadImpl.getCurrentThreadCpuTime()
sun.nio.ch.NativeThread.current()
sun.nio.ch.SelChImpl.park(int, long)
sun.rmi.registry.RegistryImpl.createRegistry(int)
sun.rmi.transport.Target.<init>(java.rmi.Remote, sun.rmi.server.Dispatcher, java.rmi.Remote, java.rmi.server.ObjID, boolean)
sun.rmi.transport.Transport.serviceCall(java.rmi.server.RemoteCall)
sun.swing.DefaultLookup.setDefaultLookup(sun.swing.DefaultLookup)
sun.swing.DefaultLookup.get(javax.swing.JComponent, javax.swing.plaf.ComponentUI, java.lang.String)
sun.tools.jconsole.VMPanel.getProxyClient()
java.io.PipedReader.ready()
java.io.PipedReader.read([C, int, int)
java.lang.Thread.join(long, int)
java.lang.Thread.join(long)
sun.net.www.http.KeepAliveCache.put(java.net.URL, java.lang.Object, sun.net.www.http.HttpClient)
sun.print.PrintJob2D.end()
java.util.concurrent.Exchanger.exchange(java.lang.Object)
java.util.concurrent.Exchanger.exchange(java.lang.Object, long, java.util.concurrent.TimeUnit)
java.util.concurrent.ForkJoinTask.get(long, java.util.concurrent.TimeUnit)
java.util.concurrent.ForkJoinTask.quietlyJoin(long, java.util.concurrent.TimeUnit)
java.util.concurrent.ForkJoinTask.get()
java.util.concurrent.LinkedTransferQueue.tryTransfer(java.lang.Object, long, java.util.concurrent.TimeUnit)
java.util.concurrent.LinkedTransferQueue.take()
java.util.concurrent.LinkedTransferQueue.transfer(java.lang.Object)
java.util.concurrent.LinkedTransferQueue.poll(long, java.util.concurrent.TimeUnit)
java.util.concurrent.SynchronousQueue.take()
java.util.concurrent.SynchronousQueue.offer(java.lang.Object, long, java.util.concurrent.TimeUnit)
java.util.concurrent.SynchronousQueue.put(java.lang.Object)
java.util.concurrent.SynchronousQueue.poll(long, java.util.concurrent.TimeUnit)
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireSharedNanos(long, long)
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireNanos(long, long)
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireInterruptibly(long)
java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireSharedInterruptibly(long)
java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int, long)
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(int)
java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(int, long)
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(int)
java.util.concurrent.locks.StampedLock.tryWriteLock(long, java.util.concurrent.TimeUnit)
java.util.concurrent.locks.StampedLock.readLockInterruptibly()
java.util.concurrent.locks.StampedLock.tryReadLock(long, java.util.concurrent.TimeUnit)
java.util.concurrent.locks.StampedLock.writeLockInterruptibly()
jdk.internal.misc.ThreadFlock.awaitAll()
jdk.internal.misc.ThreadFlock.awaitAll(java.time.Duration)
jdk.internal.org.jline.utils.NonBlockingInputStreamImpl.read(long, boolean)
java.lang.Thread.isAlive()
java.lang.ThreadGroup.uncaughtException(java.lang.Thread, java.lang.Throwable)
java.lang.ThreadGroup.setMaxPriority(int)
jdk.jfr.internal.PlatformRecorder.newTemporaryRecording()
jdk.jfr.internal.PlatformRecording.newSnapshotClone(java.lang.String, java.lang.Boolean)
java.lang.Thread.getAllStackTraces()
java.util.concurrent.Executors.newVirtualThreadPerTaskExecutor()
java.util.concurrent.StructuredTaskScope.<init>()
java.util.concurrent.StructuredTaskScope$ShutdownOnFailure.<init>()
java.util.concurrent.StructuredTaskScope$ShutdownOnSuccess.<init>()
java.lang.Thread.getId()
java.security.AccessControlContext.checkPermission(java.security.Permission)
java.security.AccessController.checkPermission(java.security.Permission)
sun.font.SunFontManager.loadFontFiles()
jdk.jfr.internal.SecuritySupport.setDaemonThread(java.lang.Thread, boolean)
sun.awt.windows.WToolkit.displayChanged()
sun.rmi.runtime.NewThreadAction.run()
java.lang.Thread.<init>(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long, boolean)
java.lang.Thread.<init>(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String)
java.lang.Thread.<init>(java.lang.ThreadGroup, java.lang.String)
java.lang.Thread.<init>(java.lang.String)
java.lang.Thread.<init>(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long)
java.lang.Thread.<init>(java.lang.Runnable, java.lang.String)
java.lang.Thread.join()
com.sun.media.sound.SoftAudioPusher.stop()
com.sun.org.apache.xml.internal.utils.ThreadControllerWrapper$ThreadController.waitThread(java.lang.Thread, java.lang.Runnable)
jdk.internal.org.jline.terminal.impl.AbstractWindowsTerminal.pause(boolean)
jdk.internal.org.jline.terminal.impl.ExternalTerminal.pause(boolean)
jdk.internal.org.jline.terminal.impl.PosixPtyTerminal.pause(boolean)
org.graalvm.collections.LockFreePrefixTree$ObjectPoolingAllocator.shutdown()
org.graalvm.compiler.core.CompilerThread.run()
java.util.concurrent.locks.LockSupport.unpark(java.lang.Thread)
jdk.internal.vm.SharedThreadContainer.onStart(java.lang.Thread)
jdk.internal.vm.SharedThreadContainer.onExit(java.lang.Thread)
java.util.concurrent.FutureTask.cancel(boolean)
javax.swing.plaf.basic.BasicDirectoryModel.invalidateFileCache()
javax.swing.plaf.basic.BasicDirectoryModel.validateFileCache()
jdk.jshell.execution.LocalExecutionControl.stop()
java.util.concurrent.locks.ReentrantLock.toString()
java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.toString()
org.graalvm.compiler.core.CompilationWatchDog.toString()
com.sun.imageio.stream.StreamCloser.addToQueue(com.sun.imageio.stream.StreamCloser$CloseAction)
jdk.internal.misc.InnocuousThread.setContextClassLoader(java.lang.ClassLoader)
sun.font.SunFontManager.createFont2D(java.io.File, int, boolean, boolean, sun.font.CreatedFontTracker)
sun.java2d.d3d.D3DScreenUpdateManager.<init>()
sun.java2d.loops.GraphicsPrimitive$TraceReporter.setShutdownHook()
com.sun.org.apache.xml.internal.utils.SafeThread.<init>(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String)
java.lang.Thread.<init>(java.lang.Runnable)
java.lang.Thread.<init>(java.lang.ThreadGroup, java.lang.Runnable)
java.lang.Thread.<init>()
sun.jvm.hotspot.HotSpotAgent.<init>()
org.graalvm.compiler.core.GraalServiceThread.<init>(java.lang.String, java.lang.Runnable)
jdk.jfr.internal.SecuritySupport.createThreadWitNoPermissions(java.lang.String, java.lang.Runnable)
jdk.internal.vm.SharedThreadContainer.threads()
java.util.concurrent
java.util.concurrent.CompletableFuture.runAsync(java.lang.Runnable)
java.util.concurrent.CompletableFuture.runAsync(java.lang.Runnable, java.util.concurrent.Executor)
java.util.concurrent.CompletableFuture.supplyAsync(java.util.function.Supplier)
java.util.concurrent.CompletableFuture.supplyAsync(java.util.function.Supplier, java.util.concurrent.Executor)
java.util.concurrent.CompletableFuture.thenApplyAsync(java.util.function.Function)
java.util.concurrent.CompletableFuture.thenApplyAsync(java.util.function.Function, java.util.concurrent.Executor)
java.util.concurrent.CompletableFuture.thenCombineAsync(java.util.concurrent.CompletionStage, java.util.function.BiFunction)
java.util.concurrent.CompletableFuture.thenCombineAsync(java.util.concurrent.CompletionStage, java.util.function.BiFunction, java.util.concurrent.Executor)
java.util.concurrent.ExecutorService.execute(java.lang.Runnable)
java.util.concurrent.ExecutorService.submit(java.lang.Runnable)
java.util.concurrent.ExecutorService.submit(java.lang.Runnable, java.lang.Object)
java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)
java.util.concurrent.ExecutorService.invokeAll(java.util.Collection)
java.util.concurrent.ExecutorService.invokeAll(java.util.Collection, long, java.util.concurrent.TimeUnit)
java.util.concurrent.ExecutorService.invokeAny(java.util.Collection)
java.util.concurrent.ExecutorService.invokeAny(java.util.Collection, long, java.util.concurrent.TimeUnit)
java.util.concurrent.ForkJoinPool.execute(java.lang.Runnable)
java.util.concurrent.ForkJoinPool.submit(java.util.concurrent.Callable)
java.util.concurrent.ForkJoinPool.submit(java.lang.Runnable)
java.util.concurrent.ScheduledExecutorService.schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit)
java.util.concurrent.ScheduledExecutorService.schedule(java.util.concurrent.Callable, long, java.util.concurrent.TimeUnit)
java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit)
java.util.concurrent.ThreadPoolExecutor.execute(java.lang.Runnable)
java.util.concurrent.ThreadFactory.newThread(java.lang.Runnable)
java.util.Collection.parallelStream()
java.util.stream.Stream.parallel()
java.lang.Thread.notify()