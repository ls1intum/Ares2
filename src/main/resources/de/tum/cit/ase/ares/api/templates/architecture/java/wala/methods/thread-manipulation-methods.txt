java.lang.Thread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/String;ILjava/lang/Runnable;JLjava/security/AccessControlContext;)
java.lang.Thread.getAllStackTraces()
java.lang.Thread.getStackTrace()
java.lang.Thread.interrupt()
java.lang.Thread.setDaemon(Z)
java.lang.Thread.setName(Ljava/lang/String;)
java.lang.Thread.setPriority(I)
java.lang.Thread.setUncaughtExceptionHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)
java.lang.VirtualThread.interrupt()
java.lang.VirtualThread.<init>
java.util.concurrent.ThreadPoolExecutor
java.util.concurrent.ThreadPoolExecutor.shutdown()
java.util.concurrent.ThreadPoolExecutor.shutdownNow()
sun.java2d.marlin.MarlinUtils.getRootThreadGroup()
sun.awt.util.ThreadGroupUtils.getRootThreadGroup()
java.lang.ThreadBuilders$PlatformThreadFactory.newThread(Ljava/lang/Runnable;)
java.lang.Thread.<init>()
java.lang.Thread.<init>(Ljava/lang/Runnable;)
java.lang.Thread.<init>(Ljava/lang/Runnable;Ljava/security/AccessControlContext;)
java.lang.Thread.<init>(Ljava/lang/Runnable;Ljava/lang/String;)
java.lang.Thread.<init>(Ljava/lang/String;)
java.lang.Thread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)
java.lang.Thread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)
java.lang.Thread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)
java.lang.Thread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;JZ)
java.lang.Thread.<init>(Ljava/lang/ThreadGroup;Ljava/lang/String;)
java.lang.ThreadBuilders$PlatformThreadBuilder.unstarted(Ljava/lang/Runnable;)
java.lang.ThreadGroup.checkParentAccess(Ljava/lang/ThreadGroup;)
java.lang.ThreadGroup.enumerate([Ljava/lang/Thread;Z)
java.lang.ThreadGroup.enumerate([Ljava/lang/ThreadGroup;Z)
java.lang.ThreadGroup.getParent()
java.lang.ThreadGroup.interrupt()
java.lang.ThreadGroup.setDaemon(Z)
java.lang.ThreadGroup.setMaxPriority(I)
java.util.concurrent.Executor
java.lang.Thread.start()
java.lang.Thread.notify()
java.util.concurrent.CompletableFuture.runAsync(Ljava/lang/Runnable;)
java.util.concurrent.CompletableFuture.runAsync(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)
java.util.concurrent.CompletableFuture.supplyAsync(Ljava/util/function/Supplier;)
java.util.concurrent.CompletableFuture.supplyAsync(Ljava/util/function/Supplier;Ljava/util/concurrent/Executor;)
java.util.concurrent.CompletableFuture.thenApplyAsync(Ljava/util/function/Function;)
java.util.concurrent.CompletableFuture.thenApplyAsync(Ljava/util/function/Function;Ljava/util/concurrent/Executor;)
java.util.concurrent.CompletableFuture.thenCombineAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;)
java.util.concurrent.CompletableFuture.thenCombineAsync(Ljava/util/concurrent/CompletionStage;Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)
java.util.concurrent.ExecutorService.execute(Ljava/lang/Runnable;)
java.util.concurrent.ExecutorService.submit(Ljava/lang/Runnable;)
java.util.concurrent.ExecutorService.submit(Ljava/lang/Runnable;Ljava/lang/Object;)
java.util.concurrent.ExecutorService.submit(Ljava/util/concurrent/Callable;)
java.util.concurrent.ExecutorService.invokeAll(Ljava/util/Collection;)
java.util.concurrent.ExecutorService.invokeAll(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)
java.util.concurrent.ExecutorService.invokeAny(Ljava/util/Collection;)
java.util.concurrent.ExecutorService.invokeAny(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)
java.util.concurrent.ForkJoinPool.execute(Ljava/lang/Runnable;)
java.util.concurrent.ForkJoinPool.submit(Ljava/util/concurrent/Callable;)
java.util.concurrent.ForkJoinPool.submit(Ljava/lang/Runnable;)
java.util.concurrent.ScheduledExecutorService.schedule(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)
java.util.concurrent.ScheduledExecutorService.schedule(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)
java.util.concurrent.ScheduledExecutorService.scheduleAtFixedRate(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)
java.util.concurrent.ThreadPoolExecutor.execute(Ljava/lang/Runnable;)
java.util.concurrent.ThreadFactory.newThread(Ljava/lang/Runnable;)
java.util.Collection.parallelStream()
java.util.stream.Stream.parallel()