sun.nio.ch.UnixAsynchronousSocketChannelImpl.implConnect(Ljava/net/SocketAddress;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler)
sun.nio.ch.WindowsAsynchronousSocketChannelImpl.implConnect(Ljava/net/SocketAddress;Ljava/lang/Object;Ljava/nio/channels/CompletionHandler)
java.net.ProxySelector.setDefault(Ljava/net/ProxySelector;)
java.net.ProxySelector.getDefault()
java.net.CookieHandler.setDefault(Ljava/net/CookieHandler;)
java.net.CookieHandler.getDefault()
java.net.ResponseCache.setDefault(Ljava/net/ResponseCache;)
java.net.ResponseCache.getDefault()
java.net.ServerSocket.<init>(Ljava/net/SocketImpl;)
java.net.Socket.<init>(Ljava/net/SocketImpl;)
sun.net.www.protocol.ftp.FtpURLConnection.getPermission()
java.net.HttpURLConnection.getPermission()
sun.net.www.protocol.http.HttpURLConnection.URLtoSocketPermission(Ljava/net/URL;)
sun.nio.ch.UnixAsynchronousServerSocketChannelImpl.implAccept(Ljava/lang/Object;LCompletionHandler<AsynchronousSocketChannel;LObject>;)
sun.nio.ch.UnixAsynchronousServerSocketChannelImpl.onEvent(IZ)
sun.nio.ch.WindowsAsynchronousServerSocketChannelImpl.implAccept(Ljava/lang/Object;LCompletionHandler<AsynchronousSocketChannel;LObject>;)
sun.nio.ch.WindowsAsynchronousServerSocketChannelImpl.onEvent(IZ)
sun.nio.ch.DatagramChannelImpl.blockingReceive(Ljava/net/DatagramPacket;J)
sun.nio.ch.DatagramChannelImpl.connect(Ljava/net/SocketAddress;Z)
sun.nio.ch.DatagramChannelImpl.untrustedReceive(Ljava/nio/ByteBuffer;)
java.net.NetMulticastSocket.connectInternal(Ljava/net/InetAddress;I)
java.net.NetMulticastSocket.receive(Ljava/net/DatagramPacket;)
sun.nio.ch.sctp.SctpMultiChannelImpl.receive(Ljava/nio/ByteBuffer;LT;LNotificationHandler<T>;)
sun.nio.ch.sctp.SctpServerChannelImpl.accept()
java.net.ServerSocket.implAccept(Ljava/net/SocketImpl;)
sun.nio.ch.ServerSocketChannelImpl.finishAccept(Ljava/io/FileDescriptor;Ljava/net/SocketAddress;)
sun.nio.ch.UnixAsynchronousServerSocketChannelImpl.finishAccept(Ljava/io/FileDescriptor;Ljava/net/InetSocketAddress;Ljava/security/AccessControlContext;)
sun.nio.ch.DatagramChannelImpl.connect(Ljava/net/SocketAddress;Z)
sun.nio.ch.DatagramChannelImpl.send(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)
sun.nio.ch.DatagramSocketAdaptor.getLocalAddress()
sun.nio.ch.DatagramSocketAdaptor.getLocalSocketAddress()
com.sun.jndi.dns.DnsContextFactory.filterNameServers(LList<String>;Z)
sun.net.www.http.HttpClient.New(Ljava/net/URL;Ljava/net/Proxy;IZLHttpURLConnection;)
sun.net.www.http.HttpClient.openServer()
java.net.HttpConnectSocketImpl.connect(Ljava/net/SocketAddress;I)
sun.net.www.protocol.https.HttpsClient.New(Ljavax/net/ssl/SSLSocketFactory;Ljava/net/URL;Ljavax/net/ssl/HostnameVerifier;Ljava/net/Proxy;ZILHttpURLConnection;)
sun.net.www.protocol.http.HttpURLConnection.checkSetHost()
sun.net.www.protocol.http.HttpURLConnection.checkURLFile()
sun.net.www.protocol.http.HttpURLConnection.followRedirect0(Ljava/lang/String;ILjava/net/URL;)
java.net.InetAddress.getLocalHost()
sun.net.www.protocol.jar.JarFileFactory.getCachedJarFile(Ljava/net/URL;)
sun.security.provider.certpath.ldap.LDAPCertStore.<init>(LCertStoreParameters;)
sun.nio.ch.Net.getRevealedLocalAddress(Ljava/net/SocketAddress;)
java.net.NetMulticastSocket.connectInternal(Ljava/net/InetAddress;I)
java.net.NetMulticastSocket.getLocalAddress()
java.net.NetMulticastSocket.send(Ljava/net/DatagramPacket;)
java.net.NetMulticastSocket.send(Ljava/net/DatagramPacket;B)
java.net.NetworkInterface.getCheckedInetAddresses()
java.net.NetworkInterface.getInterfaceAddresses()
sun.nio.ch.sctp.SctpChannelImpl.connect(Ljava/net/SocketAddress;)
sun.nio.ch.sctp.SctpMultiChannelImpl.send(Ljava/nio/ByteBuffer;Lcom/sun/nio/sctp/MessageInfo;)
sun.nio.ch.sctp.SctpNet.getRevealedLocalAddress(Ljava/net/SocketAddress;Ljava/lang/SecurityManager;)
java.net.ServerSocket.getInetAddress()
java.net.Socket.connect(Ljava/net/SocketAddress;I)
java.net.Socket.getLocalAddress()
java.net.Socket.<init>(Ljava/net/Proxy;)
sun.nio.ch.SocketChannelImpl.checkRemote(Ljava/net/SocketAddress;)
java.net.SocksSocketImpl.connect(Ljava/net/SocketAddress;I)
sun.awt.SunToolkit.checkPermissions(Ljava/net/URL;)
sun.rmi.transport.tcp.TCPChannel.checkConnectPermission()
jdk.internal.loader.URLClassPath.check(Ljava/net/URL;)
sun.awt.image.URLImageSource.<init>(Ljava/net/URL;)
sun.nio.ch.AsynchronousServerSocketChannelImpl.bind(Ljava/net/SocketAddress;I)
sun.nio.ch.AsynchronousSocketChannelImpl.bind(Ljava/net/SocketAddress;)
sun.nio.ch.DatagramChannelImpl.bindInternal(Ljava/net/SocketAddress;)
jdk.internal.net.http.HttpClientImpl.<init>(Ljdk/internal/net/http/HttpClientBuilderImpl;Ljdk/internal/net/http/HttpClientImpl$SingleFacadeFactory;)
java.net.NetMulticastSocket.bind(Ljava/net/SocketAddress;)
sun.nio.ch.sctp.SctpChannelImpl.bind(Ljava/net/SocketAddress;)
sun.nio.ch.sctp.SctpMultiChannelImpl.bind(Ljava/net/SocketAddress;I)
sun.nio.ch.sctp.SctpServerChannelImpl.bind(Ljava/net/SocketAddress;I)
java.net.ServerSocket.bind(Ljava/net/SocketAddress;I)
sun.nio.ch.ServerSocketChannelImpl.netBind(Ljava/net/SocketAddress;I)
java.net.Socket.bind(Ljava/net/SocketAddress;)
sun.nio.ch.SocketChannelImpl.netBind(Ljava/net/SocketAddress;)
sun.rmi.transport.tcp.TCPTransport.listen()
sun.nio.ch.DatagramChannelImpl.connect(Ljava/net/SocketAddress;Z)
sun.nio.ch.DatagramChannelImpl.innerJoin(Ljava/net/InetAddress;Ljava/net/NetworkInterface;Ljava/net/InetAddress;)
sun.nio.ch.DatagramChannelImpl.send(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)
sun.nio.ch.DatagramSocketAdaptor.joinGroup(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)
sun.nio.ch.DatagramSocketAdaptor.leaveGroup(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)
java.net.NetMulticastSocket.connectInternal(Ljava/net/InetAddress;I)
java.net.NetMulticastSocket.joinGroup(Ljava/net/InetAddress;)
java.net.NetMulticastSocket.joinGroup(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)
java.net.NetMulticastSocket.leaveGroup(Ljava/net/InetAddress;)
java.net.NetMulticastSocket.leaveGroup(Ljava/net/SocketAddress;Ljava/net/NetworkInterface;)
java.net.NetMulticastSocket.send(Ljava/net/DatagramPacket;)
java.net.NetMulticastSocket.send(Ljava/net/DatagramPacket;B)