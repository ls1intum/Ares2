package %s;

import com.tngtech.archunit.base.DescribedPredicate;
import com.tngtech.archunit.core.domain.*;
import com.tngtech.archunit.core.importer.ImportOption;
import com.tngtech.archunit.junit.AnalyzeClasses;
import com.tngtech.archunit.junit.ArchTest;
import com.tngtech.archunit.lang.ArchRule;
import com.tngtech.archunit.lang.syntax.ArchRuleDefinition;
import de.tum.cit.ase.ares.api.architecturetest.ArchitectureTestCaseStorage;
import de.tum.cit.ase.ares.api.architecturetest.java.JavaSupportedArchitectureTestCase;
import de.tum.cit.ase.ares.api.securitytest.java.PathLocationProvider;
import de.tum.cit.ase.ares.api.securitytest.java.StudentCompiledClassesPath;
import de.tum.cit.ase.ares.api.architecturetest.java.postcompile.TransitivelyAccessesMethodsCondition;
\s
import java.util.*;
\s
/**
* This class runs the security rules on the architecture for the pre-compile mode.
*/
@StudentCompiledClassesPath("%s")Defines security rules for the Java programming language in post-compile mode.
@AnalyzeClasses(locations = PathLocationProvider.class, importOptions = ImportOption.DoNotIncludeTests.class)
public class ArchitectureTestCase {